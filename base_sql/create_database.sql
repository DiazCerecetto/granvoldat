-- REQUERIMIENTO 1


CREATE TABLE LICEO (
    IDLICEO INTEGER PRIMARY KEY,
    nomLiceo VARCHAR(200) NOT NULL
);

CREATE TABLE MODALIDAD (
    IDMODALIDAD INTEGER PRIMARY KEY,
    nomModalidad VARCHAR(50) NOT NULL
);

CREATE TABLE NIVEL (
    idGrado INTEGER PRIMARY KEY,
    idCiclo INTEGER NOT NULL,
    nomCiclo VARCHAR(200) NOT NULL
);

CREATE TABLE OPCION (
    IDOPCION INTEGER PRIMARY KEY,
    nomOpcion VARCHAR(50)
);

CREATE TABLE PLAN (
    IDPLAN INTEGER PRIMARY KEY,
    nomPlan VARCHAR(200) NOT NULL,
    idEpoca INTEGER NOT NULL,
    nomEpoca VARCHAR(200) NOT NULL,
    idEsNuevo INTEGER NOT NULL,
    esNuevo VARCHAR(200) NOT NULL,
    idFranjaEdad INTEGER NOT NULL,
    franjaEdad VARCHAR(200) NOT NULL
);

CREATE TABLE TURNOL(
    IDTURNO INTEGER PRIMARY KEY,
    nomTurno VARCHAR(50) NOT NULL,
    idHorario INTEGER NOT NULL,
    nomHorario VARCHAR(50) NOT NULL,
    idFranjaHoraria INTEGER NOT NULL,
    franjaHoraria VARCHAR(50) NOT NULL
);

CREATE TABLE UBICACION (
    IDUBICACION INTEGER PRIMARY KEY,
    latitud FLOAT, -- lo tengo
    longitud FLOAT, -- lo tengo
    idArea INTEGER,
    nomArea VARCHAR(200),
    idBarrio INTEGER,
    nomBarrio VARCHAR(200),
    idZona INTEGER, -- lo tengo
    nomZona VARCHAR(200), 
    idLocalidad INTEGER NOT NULL,-- lo tengo
    nomLocalidad VARCHAR(200) NOT NULL,-- lo tengo
    idDepartamento INTEGER NOT NULL,-- lo tengo
    nomDepartamento VARCHAR(200) NOT NULL,-- lo tengo
    idZonaPais INTEGER NOT NULL,-- lo tengo
    nomZonaPais VARCHAR(200) NOT NULL -- lo tengo
);

CREATE TABLE UBICACIONE (
    IDUBICACION INTEGER PRIMARY KEY,
    latitud FLOAT, -- lo tengo
    longitud FLOAT, -- lo tengo
    idArea INTEGER,
    nomArea VARCHAR(200),
    idBarrio INTEGER,
    nomBarrio VARCHAR(200),
    idZona INTEGER, -- lo tengo
    nomZona VARCHAR(200), 
    idLocalidad INTEGER NOT NULL,-- lo tengo
    nomLocalidad VARCHAR(200) NOT NULL,-- lo tengo
    idDepartamento INTEGER NOT NULL,-- lo tengo
    nomDepartamento VARCHAR(200) NOT NULL,-- lo tengo
    idZonaPais INTEGER NOT NULL,-- lo tengo
    nomZonaPais VARCHAR(200) NOT NULL -- lo tengo
);
-- REQUERIMIENTO 2

CREATE TABLE ESCUELA(
    IDESCUELA INTEGER PRIMARY KEY,
    nomEscuela VARCHAR(50) NOT NULL,
    idTipo INTEGER NOT NULL,
    nomTipo VARCHAR(50) NOT NULL
);

CREATE TABLE TURNOE(
    idTurno INTEGER PRIMARY KEY,
    nomTurno VARCHAR(50) NOT NULL,
    idTipoTurno INTEGER NOT NULL,
    nomTipoTurno VARCHAR(50) NOT NULL,
    idFranjaHoraria INTEGER NOT NULL,
    franjaHoraria VARCHAR(50) NOT NULL
);

CREATE TABLE CATEGORIA(
    idCategoria INTEGER PRIMARY KEY,
    nomCategoria VARCHAR(50) NOT NULL,
    idPractica INTEGER NOT NULL,
    nomPractica VARCHAR(50) NOT NULL,
    idDiscapacidad INTEGER NOT NULL,
    nomDiscapacidad VARCHAR(50) NOT NULL
);

CREATE TABLE NIVELE(
    idNivel INTEGER PRIMARY KEY,
    nomNivel VARCHAR(50) NOT NULL,
    idCiclo INTEGER NOT NULL,
    nomCiclo VARCHAR(50) NOT NULL
);



-- tablas de hechos

CREATE TABLE OFERTAS_SECUNDARIA(
    idLiceo INTEGER NOT NULL,
    idModalidad INTEGER NOT NULL,
    idNivel INTEGER NOT NULL,
    idPlan INTEGER NOT NULL,
    idTurnoL INTEGER NOT NULL,
    idOpcion INTEGER NOT NULL,
    idUbicacion INTEGER NOT NULL,
    PorcEstudiantes FLOAT,
    PorcDocentes FLOAT,
    porcLiceos FLOAT
);
CREATE TABLE OFERTAS_INICIAL_PRIMARIA(
    idEscuela INTEGER NOT NULL,
    idTurnoE INTEGER NOT NULL,
    idCategoria INTEGER NOT NULL,
    idNivelDesde INTEGER NOT NULL,
    idNivelHasta INTEGER NOT NULL,
    idUbicacion INTEGER NOT NULL,
    cant_aulas INTEGER,
    gruposXnivel INTEGER,
    cant_niveles Integer
);



ALTER TABLE OFERTAS_SECUNDARIA ADD CONSTRAINT PK_OFERTAS_SECUNDARIA PRIMARY KEY (idLiceo, idModalidad, idNivel, idPlan, idTurnoL, idOpcion, idUbicacion);

-- foreign keys

ALTER TABLE OFERTAS_SECUNDARIA ADD CONSTRAINT FK_OFERTAS_SECUNDARIA_LICEO FOREIGN KEY (idLiceo) REFERENCES LICEO(IDLICEO);
ALTER TABLE OFERTAS_SECUNDARIA ADD CONSTRAINT FK_OFERTAS_SECUNDARIA_MODALIDAD FOREIGN KEY (idModalidad) REFERENCES MODALIDAD(IDMODALIDAD);
ALTER TABLE OFERTAS_SECUNDARIA ADD CONSTRAINT FK_OFERTAS_SECUNDARIA_NIVEL FOREIGN KEY (idNivel) REFERENCES NIVEL(idGrado);
ALTER TABLE OFERTAS_SECUNDARIA ADD CONSTRAINT FK_OFERTAS_SECUNDARIA_PLAN FOREIGN KEY (idPlan) REFERENCES PLAN(IDPLAN);
ALTER TABLE OFERTAS_SECUNDARIA ADD CONSTRAINT FK_OFERTAS_SECUNDARIA_TURNO FOREIGN KEY (idTurnoL) REFERENCES TURNOL(IDTURNO);
ALTER TABLE OFERTAS_SECUNDARIA ADD CONSTRAINT FK_OFERTAS_SECUNDARIA_OPCION FOREIGN KEY (idOpcion) REFERENCES OPCION(IDOPCION);
ALTER TABLE OFERTAS_SECUNDARIA ADD CONSTRAINT FK_OFERTAS_SECUNDARIA_UBICACION FOREIGN KEY (idUbicacion) REFERENCES UBICACION(IDUBICACION);



-- ALTER TABLE OFERTAS_ESCUELAS ADD CONSTRAINT PK_OFERTAS_ESCUELAS PRIMARY KEY (idEscuela, idTurnoE, idCategoria, idNivelDesde, idNivelHasta, idUbicacion);
-- 
-- -- foreign keys
-- 
ALTER TABLE OFERTAS_INICIAL_PRIMARIA ADD CONSTRAINT FK_OFERTAS_ESCUELAS_ESCUELA FOREIGN KEY (idEscuela) REFERENCES ESCUELA(IDESCUELA);
ALTER TABLE OFERTAS_INICIAL_PRIMARIA ADD CONSTRAINT FK_OFERTAS_ESCUELAS_TURNO FOREIGN KEY (idTurnoE) REFERENCES TURNOE(idTurno);
ALTER TABLE OFERTAS_INICIAL_PRIMARIA ADD CONSTRAINT FK_OFERTAS_ESCUELAS_CATEGORIA FOREIGN KEY (idCategoria) REFERENCES CATEGORIA(idCategoria);
ALTER TABLE OFERTAS_INICIAL_PRIMARIA ADD CONSTRAINT FK_OFERTAS_ESCUELAS_NIVELD FOREIGN KEY (idNivelDesde) REFERENCES NIVELE(idNivel);
ALTER TABLE OFERTAS_INICIAL_PRIMARIA ADD CONSTRAINT FK_OFERTAS_ESCUELAS_NIVELH FOREIGN KEY (idNivelHasta) REFERENCES NIVELE(idNivel);
ALTER TABLE OFERTAS_INICIAL_PRIMARIA ADD CONSTRAINT FK_OFERTAS_ESCUELAS_UBICACION FOREIGN KEY (idUbicacion) REFERENCES UBICACION(IDUBICACION);
ALTER TABLE OFERTAS_INICIAL_PRIMARIA ADD CONSTRAINT PK_OFERTAS_ESCUELAS PRIMARY KEY (idEscuela, idTurnoE, idCategoria, idNivelDesde, idNivelHasta, idUbicacion);

---
--
ALTER TABLE OFERTAS_SECUNDARIA
ADD COLUMN cant_ofertas integer DEFAULT 1;

CREATE TABLE prueba(
    idLiceo INTEGER NOT NULL,
    idModalidad INTEGER NOT NULL,
    PorcEstudiantes FLOAT,
    PorcDocentes FLOAT,
    porcLiceos FLOAT
);
ALTER TABLE prueba ADD CONSTRAINT PK_PRUEBA PRIMARY KEY (idLiceo, idModalidad);
ALTER TABLE prueba ADD CONSTRAINT FK_PRUEBA_LICEO FOREIGN KEY (idLiceo) REFERENCES LICEO(IDLICEO);
ALTER TABLE prueba ADD CONSTRAINT FK_PRUEBA_MODALIDAD FOREIGN KEY (idModalidad) REFERENCES MODALIDAD(idModalidad);

insert into prueba values (1, 1,1, 1, 1);


-- para cada zonapais, 
-- obtener el promedio de cantidad de aulas por cada departamento 
-- y retornar una lista con los departamentos que tengan un promedio mayor a 10

SELECT nomZonaPais, nomDepartamento, avg(cant_aulas) as promedio
FROM UBICACIONE
JOIN OFERTAS_INICIAL_PRIMARIA ON UBICACIONE.IDUBICACION = OFERTAS_INICIAL_PRIMARIA.idUbicacion
GROUP BY nomZonaPais, nomDepartamento
HAVING avg(cant_aulas) > 10;



ALTER TABLE OFERTAS_INICIAL_PRIMARIA DROP CONSTRAINT FK_OFERTAS_ESCUELAS_ESCUELA FOREIGN KEY (idEscuela) REFERENCES ESCUELA(IDESCUELA);
ALTER TABLE OFERTAS_INICIAL_PRIMARIA DROP CONSTRAINT FK_OFERTAS_ESCUELAS_TURNO FOREIGN KEY (idTurnoE) REFERENCES TURNOE(idTurno);
ALTER TABLE OFERTAS_INICIAL_PRIMARIA DROP CONSTRAINT FK_OFERTAS_ESCUELAS_CATEGORIA FOREIGN KEY (idCategoria) REFERENCES CATEGORIA(idCategoria);
ALTER TABLE OFERTAS_INICIAL_PRIMARIA DROP CONSTRAINT FK_OFERTAS_ESCUELAS_NIVELD FOREIGN KEY (idNivelDesde) REFERENCES NIVELE(idNivel);
ALTER TABLE OFERTAS_INICIAL_PRIMARIA DROP CONSTRAINT FK_OFERTAS_ESCUELAS_NIVELH FOREIGN KEY (idNivelHasta) REFERENCES NIVELE(idNivel);
ALTER TABLE OFERTAS_INICIAL_PRIMARIA DROP CONSTRAINT FK_OFERTAS_ESCUELAS_UBICACION FOREIGN KEY (idUbicacion) REFERENCES UBICACIONE(IDUBICACION);
ALTER TABLE OFERTAS_INICIAL_PRIMARIA DROP CONSTRAINT PK_OFERTAS_ESCUELAS PRIMARY KEY (idEscuela, idTurnoE, idCategoria, idNivelDesde, idNivelHasta, idUbicacion);

ALTER TABLE OFERTAS_INICIAL_PRIMARIA DROP CONSTRAINT FK_OFERTAS_ESCUELAS_ESCUELA;
ALTER TABLE OFERTAS_INICIAL_PRIMARIA DROP CONSTRAINT FK_OFERTAS_ESCUELAS_TURNO;
ALTER TABLE OFERTAS_INICIAL_PRIMARIA DROP CONSTRAINT FK_OFERTAS_ESCUELAS_CATEGORIA;
ALTER TABLE OFERTAS_INICIAL_PRIMARIA DROP CONSTRAINT FK_OFERTAS_ESCUELAS_NIVELD;
ALTER TABLE OFERTAS_INICIAL_PRIMARIA DROP CONSTRAINT FK_OFERTAS_ESCUELAS_NIVELH;
ALTER TABLE OFERTAS_INICIAL_PRIMARIA DROP CONSTRAINT FK_OFERTAS_ESCUELAS_UBICACION;
ALTER TABLE OFERTAS_INICIAL_PRIMARIA DROP CONSTRAINT PK_OFERTAS_ESCUELAS;

-- elegir todos los departamentos que tienen al menos una entrada en OFERTAS_INICIAL_PRIMARIA
SELECT DISTINCT nomDepartamento
FROM UBICACIONE
JOIN OFERTAS_INICIAL_PRIMARIA ON UBICACIONE.IDUBICACION = OFERTAS_INICIAL_PRIMARIA.idUbicacion;

-- indicar aquellos que no figuran en la consulta anterior
SELECT distinct nomDepartamento
FROM UBICACIONE
WHERE nomDepartamento NOT IN (
    SELECT DISTINCT nomDepartamento
    FROM UBICACIONE
    JOIN OFERTAS_INICIAL_PRIMARIA ON UBICACIONE.IDUBICACION = OFERTAS_INICIAL_PRIMARIA.idUbicacion
);

select distinct nomDepartamento from ubicacione;
